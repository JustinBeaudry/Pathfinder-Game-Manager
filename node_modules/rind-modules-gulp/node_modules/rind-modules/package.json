{
  "name": "rind-modules",
  "version": "0.1.4",
  "description": "rind modules symlink builder",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/gulp/bin/gulp.js lint && node test"
  },
  "author": {
    "name": "Matthew Hadley",
    "url": "https://github.com/diffsky"
  },
  "license": "MIT",
  "dependencies": {
    "glob": "^3.2.9",
    "mkdirp": "^0.3.5",
    "rimraf": "^2.2.6"
  },
  "devDependencies": {
    "tape": "^2.10.2",
    "gulp": "^3.6.2",
    "minimist": "^0.1.0",
    "gulp-jsbeautifier": "0.0.2",
    "gulp-diff": "^0.1.4",
    "confidence": "^0.12.1",
    "gulp-eslint": "^0.1.7"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/creativelive/rind-modules.git"
  },
  "keywords": [
    "rind",
    "modules",
    "symlink",
    "tree",
    "builder"
  ],
  "bugs": {
    "url": "https://github.com/creativelive/rind-modules/issues"
  },
  "homepage": "https://github.com/creativelive/rind-modules",
  "readme": "# Rind Modules [![](https://travis-ci.org/creativelive/rind-modules.png)](https://travis-ci.org/creativelive/rind-modules)\n\nBuild a symlink tree to turn a module-based file hierarchy into an entity based one\n\n```\n├── modules  // input directory\n│   ├── aaa\n│   │   └── bbb.mod\n│   │       ├── assets\n│   │       │   └── img\n│   │       │       └── file.txt\n│   │       ├── lib\n│   │       │   └── file.txt\n│   │       └── templates\n│   │           └── file.txt\n│   └── ccc.mod\n│       ├── assets\n│       │   └── img\n│       │       └── file.txt\n│       └── templates\n│           └── file.txt\n└── output  // output directory\n    ├── assets\n    │   └── img  // mapped a sub-directory\n    │       ├── aaa\n    │       │   └── bbb -> ../../../../modules/aaa/bbb.mod/assets/img\n    │       └── ccc -> ../../../modules/ccc.mod/assets/img\n    ├── lib\n    │   └── aaa\n    │       └── bbb -> ../../../modules/aaa/bbb.mod/lib\n    └── templates\n        ├── aaa\n        │   └── bbb -> ../../../modules/aaa/bbb.mod/templates\n        └── ccc -> ../../modules/ccc.mod/templates\n```\n\nModules are identified by having a `.mod` extension on their directory. Modules cannot\nbe nested inside eachother, but can be nested inside a directory tree to allow\ngrouping of related modules. For example:\n\n```\nmodules/\n  user/\n    login.mod ...\n    signup.mod ...\n```\n\n## Usage\n\n```\nvar rindModules = require('rind-modules');\n\n// object describing module top-level directories to map\nvar anatomy = {\n  lib: true,        // map the `lib` directory\n  templates: true,  // map the `templates` directory\n  assets: {         // map the `assets` directory and\n    sub: true       // its `sub`directories\n  }\n}\n\nrindModules({\n  anatomy: anatomy,\n  input: __dirname,\n  output: __dirname + '/output',\n  // rm: true, // use with caution - deletes any existing targets in the output directory\n  verbose: true,\n});\n```\n",
  "readmeFilename": "README.md",
  "_id": "rind-modules@0.1.4",
  "_shasum": "5d7890102fa34a16587dfdab5a27c5d4a6cbe6e3",
  "_from": "rind-modules@>=0.1.1",
  "_resolved": "https://registry.npmjs.org/rind-modules/-/rind-modules-0.1.4.tgz"
}
